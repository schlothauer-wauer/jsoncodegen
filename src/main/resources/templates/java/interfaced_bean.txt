package ${extraParam.packageName};

<% if ( extraParam.interfacePackageName) { %>
import ${extraParam.interfacePackageName}.*;
<% } %>


<% if ( currentType.description ) { %>
/**
 * ${currentType.description}
 */
<% } %>
public class ${ upperCamelCase.call(currentType.name) } implements I${ firstUpperCase.call(currentType.name) } {
    <% currentType.properties.each { prop -> %>
    <% if (prop.description) { %>
    /**
     * ${prop.description}
     */
    <% } %>
    private ${ typeToJava.call(prop.type,'I') } ${prop.name};

    public ${ typeToJava.call(prop.type,'I') } get${ firstUpperCase.call(prop.name) } () { return this.${prop.name}; }

    public void set${ firstUpperCase.call(prop.name) } (${ typeToJava.call(prop.type,'I') } ${prop.name}) {
        this.${prop.name} = ${prop.name};
    }

    <% } %>
}